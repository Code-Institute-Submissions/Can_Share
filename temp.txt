# , beer=beer_list    
#_newbeeradd = mongo.db.cansAndBottleInfo.find()
# beer_list = [beer for beer in _newbeeradd]


"""
@app.route('/add_beer')
def add_beer():
    return render_template('addnewbeer.html', typesofbeer=mongo.db.type.find())


@app.route('/insert_beer', methods=['POST'])
def insert_beer():
    cans = mongo.db.cansAndBottleInfo
    cans.insert_one(request.form.to_dict())
    return redirect(url_for('home'))
"""


# UPDATE
@app.route("/edit_beer/<can_id>")
def edit_beer(can_id):
    the_can = mongo.db.cansAndBottleinfo.find_one({'_id': ObjectId(can_id)})
    all_caninfo = mongo.db.cansAndBottleInfo.find()
    return render_template('editbeer.html', cans=the_can, caninfo=all_caninfo)

    , can_id=cans._id

    # UPDATE
@app.route("/edit_beer/<can_id>")
def edit_beer(can_id):
    _the_can = mongo.db.cansAndBottleinfo.find_one({'_id': ObjectId(can_id)})
    all_caninfo = mongo.db.cansAndBottleInfo.find()
    return render_template('editbeer.html', the_can=_the_can, allcaninfo=all_caninfo,
                           typesofbeer=mongo.db.type.find(),
                           abvnumber=arange(0, 20, 0.1))

     
# UPDATE
@app.route("/edit_beer/<can_id>")
def edit_beer(can_id):
    _the_can = mongo.db.cansAndBottleInfo.find_one({'_id': ObjectId(can_id)})
    variety_of_beer = ""# mongo.db.type.find_one()
    print('variety of beer', variety_of_beer)
    return render_template('editbeer.html', the_can=_the_can,
                           typesofbeer=mongo.db.type.find(),
                           abvnumber=arange(0, 200, 1),
                           varietyofbeer=variety_of_beer,
                           price=arange(0, 200, 1))                      


<option class="dropdown-item" value="{{the_can.type}}" name="{{type._id}}" selected>{{type.type}}</option>

java crript



function vote(direction, element) {
    console.log(direction)
    if (direction == 'up') {
        var xhttp = new XMLHttpRequest();// xhttp request url passin 1 and can_id  
        
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {// results python going to check if the user has already rated it and determin what action to take
                results = this.responseText;
            }
        };
        xhttp.open("GET", '/vote/' + element.id + direction, true);
        xhttp.send();

        // if the results are 1 or 0 change the icon from a filled in one to a non filled in one.   
        if (results == 1) {
            document.getElementById('thumbsiconup').className = 'fas fa-thumbs-up TU';
        }
        else {
            document.getElementById('thumbsiconup').className = 'far fa-thumbs-up TU';
        }
    }
    else {
        var xhttp = new XMLHttpRequest();
        console.log('i click down')
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
               results = this.responseText;
            }
        };
        xhttp.open("GET", '/vote/' + element.id + direction, true);
        xhttp.send();
        // if the results are 1 or 0 change the icon from a filled in one to a non filled in one.   
        if ( results == 0) {
            document.getElementById('thumbsicondown').className = 'fas fa-thumbs-up TD';
        }
        else {
            document.getElementById('thumbsicondown').className = 'far fa-thumbs-up TD';
        }
    }
}
// far is not clicked
// fas is clicked
